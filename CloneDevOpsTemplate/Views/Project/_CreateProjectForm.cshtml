@model Tuple<ProjectBase[], string, string>

@Html.ValidationSummary(false, "", new { @class = "text-danger" })

@using (Html.BeginForm(Model.Item3, Model.Item2, FormMethod.Post, new { @class = "form-container-clone input-group-lg" }))
{
    <div class="form-group row">
        @Html.Label("templateProjectId", "Select a project to clone", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.DropDownList("templateProjectId", new SelectList(Model.Item1, "Id", "Name"), "Select a project", new { @class = "form-select form-control" })
        </div>
    </div>

    <div class="form-group row">
        @Html.Label("newProjectName", "New Project Name", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBox("newProjectName", "My New Project", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        @Html.Label("description", "Project Description", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBox("description", "My New Project Description", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        @Html.Label("visibility", "Visibility", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.DropDownList("visibility", new SelectList(Enum.GetNames<Visibility>()), new { @class = "form-select form-control" })
        </div>
    </div>
    
    <div class="form-group row">
        <label for="createButton" class="col-sm-2 col-form-label form-hidden-label">Create</label>
        <div class="col-sm-10">
            <button id="createButton" type="submit" class="btn btn-primary form-button form-text">Create</button>
        </div>
    </div>
}
