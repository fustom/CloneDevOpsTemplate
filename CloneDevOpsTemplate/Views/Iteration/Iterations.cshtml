@using Microsoft.AspNetCore.Html;

@model Iteration
@{
    ViewData["Title"] = "Iterations";
}

<h1>Iterations</h1>

@functions{
    IHtmlContent ShowIteration(Iteration iteration)
    {
        var content = new HtmlContentBuilder()
            .AppendHtml("""<div class="accordion-item">""")
            .AppendHtml($"""<h2 class="accordion-header" id="heading{iteration.Id}">""")
            .AppendHtml($"""<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse{iteration.Id}" aria-expanded="true" aria-controls="collapse{iteration.Id}">""")
            .AppendHtml($"<h3>{iteration.Name}</h3>")
            .AppendHtml("</button>")
            .AppendHtml("</h2>")
            .AppendHtml($"""<div id="collapse{iteration.Id}" class="accordion-collapse collapse" aria-labelledby="heading{iteration.Id}">""")
            .AppendHtml("""<div class="accordion-body accordion">""")
            .AppendHtml($"<div>Id: {iteration.Id}</div>");


        if (iteration.Attributes != null)
        {
            if (iteration.Attributes.StartDate != null)
            {
                content.AppendHtml($"<div>Start: {iteration.Attributes.StartDate}</div>");
            }
            if (iteration.Attributes.FinishDate != null)
            {
                content.AppendHtml($"<div>Finish: {iteration.Attributes.FinishDate}</div>");
            }
        }
        if (iteration.HasChildren)
        {
            foreach (var child in iteration.Children)
            {
                content.AppendHtml(ShowIteration(child));
            }
        }

        content.AppendHtml("</div>");
        content.AppendHtml("</div>");
        content.AppendHtml("</div>");

        return content;
    }
}

<div class="accordion" id="accordionExample">
@ShowIteration(Model)
</div>
